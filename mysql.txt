
CREATE TABLE projectx.`users` (
  `id` int NOT NULL AUTO_INCREMENT,
  `username` varchar(50) NOT NULL,
  `password_hash` varchar(100) NOT NULL,
  `email` varchar(100) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ;

CREATE TABLE `projectx`.`roles` (
  `id` int NOT NULL AUTO_INCREMENT,
  `role` varchar(50) NOT NULL,
  PRIMARY KEY (`id`)
);

insert into projectx.roles (role) values ('user');
insert into projectx.roles (role) values ('admin');
insert into projectx.roles (role) values ('manager');

CREATE TABLE projectx.`users_roles` (
  `user_id` int NOT NULL,
  `role_id` int NOT NULL,
  PRIMARY KEY (`user_id`,`role_id`),
  KEY `role_id` (`role_id`),
  CONSTRAINT `users_roles_ibfk_1` FOREIGN KEY (`user_id`) REFERENCES `users` (`id`),
  CONSTRAINT `users_roles_ibfk_2` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`)
) ;

CREATE TABLE `projectx`.`permissions` (
  `id` int NOT NULL AUTO_INCREMENT,
  `permission` varchar(50) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=0;

insert into projectx.permissions(permission) values('read_data');
insert into projectx.permissions(permission) values('edit_data');
insert into projectx.permissions(permission) values('manage_users');
insert into projectx.permissions(permission) values('approve_requests');

CREATE TABLE `projectx`.`role_permissions` (
  `id` int NOT NULL AUTO_INCREMENT,
  `role_id` int DEFAULT NULL,
  `permission_id` int DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `role_id` (`role_id`),
  KEY `permission_id` (`permission_id`),
  CONSTRAINT `role_permissions_ibfk_1` FOREIGN KEY (`role_id`) REFERENCES `roles` (`id`),
  CONSTRAINT `role_permissions_ibfk_2` FOREIGN KEY (`permission_id`) REFERENCES `permissions` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=0;
CREATE TABLE Games (
    game_id INT AUTO_INCREMENT PRIMARY KEY,
    game_name VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE Players (
    player_id INT AUTO_INCREMENT PRIMARY KEY,
    player_name VARCHAR(255),
    game_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (game_id) REFERENCES Games(game_id)
);

CREATE TABLE Record_Scores (
    score_id INT AUTO_INCREMENT PRIMARY KEY,
    player_id INT,
    score INT,
    date DATE,
    FOREIGN KEY (player_id) REFERENCES Players(player_id)
);


-- Change column names
ALTER TABLE Players
CHANGE COLUMN id player_id INT AUTO_INCREMENT,
CHANGE COLUMN name player_name VARCHAR(255);


-- Add timestamp column with current time as default
CREATE TABLE 13cardsgame.Games (
    game_id INT AUTO_INCREMENT PRIMARY KEY,
    game_name VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Add new column game_id with default value 1
ALTER TABLE 13cardsgame.Players
ADD COLUMN game_id INT DEFAULT 1;

ALTER TABLE 13cardsgame.Players
ADD COLUMN timestamp_column TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE 13cardsgame.record_scores
ADD COLUMN timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE 13cardsgame.Players
CHANGE COLUMN timestamp_column timestamp TIMESTAMP;

ALTER TABLE 13cardsgame.Games
CHANGE COLUMN created_at timestamp TIMESTAMP;

ALTER TABLE 13cardsgame.players
MODIFY COLUMN timestamp TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP;

 SELECT p.name,
        SUM(CASE WHEN r.round_number = 1 THEN r.score ELSE 0 END) AS round_1, 
        SUM(CASE WHEN r.round_number = 2 THEN r.score ELSE 0 END) AS round_2, 
        SUM(CASE WHEN r.round_number = 3 THEN r.score ELSE 0 END) AS round_3, 
        SUM(CASE WHEN r.round_number = 4 THEN r.score ELSE 0 END) AS round_4, 
        SUM(r.score) AS total_Score
        FROM 13cardsgame.record_scores r
        INNER JOIN 13cardsgame.players AS p ON p.id = r.player_id
        GROUP BY p.name;

After Passing Game_name -----

SELECT p.name,
        SUM(CASE WHEN r.round_number = 1 THEN r.score ELSE 0 END) AS round_1, 
        SUM(CASE WHEN r.round_number = 2 THEN r.score ELSE 0 END) AS round_2, 
        SUM(CASE WHEN r.round_number = 3 THEN r.score ELSE 0 END) AS round_3, 
        SUM(CASE WHEN r.round_number = 4 THEN r.score ELSE 0 END) AS round_4, 
        SUM(r.score) AS total_Score
        FROM 13cardsgame.record_scores r
        INNER JOIN 13cardsgame.players AS p ON p.id = r.player_id
		INNER JOIN 13cardsgame.games AS g ON g.game_id = p.game_id 
        AND g.game_name = 'MyTestGame'
        GROUP BY p.name;

        CREATE TABLE `users` (
  `id` int NOT NULL AUTO_INCREMENT,
  `username` varchar(50) NOT NULL,
  `password_hash` varchar(100) NOT NULL,
  `email` varchar(100) NOT NULL,
  `created_at` timestamp NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `username` (`username`)
) ENGINE=InnoDB AUTO_INCREMENT=33 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;